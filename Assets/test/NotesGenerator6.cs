using UnityEngine;
using System.Collections;
using UnityEngine.SceneManagement;

public class NotesGenerator6 : MonoBehaviour {
    float timer = 0.0f;

    int timeCount = 0;

    bool Chain;

    NotesGenerator difficulty;
    public SceneChange sceneChange;
    public GameObject notesPrefab;
    public RectTransform clear;

    int Timer;
    public float[] ReaperNormal =
    {
4.813f,
5.137f,
5.312f,
5.536f,
5.835f,
6.231f,
6.561f,
6.921f,
7.385f,
7.548f,
7.743f,
8.117f,
8.455f,
8.826f,
9.238f,
9.605f,
9.783f,
9.975f,
10.338f,
10.736f,
11.125f,
11.308f,
11.53f,
11.892f,
11.893f,
12.262f,
12.431f,
12.618f,
12.981f,
13.365f,
13.723f,
14.084f,
14.286f,
14.478f,
14.68f,
14.918f,
15.288f,
15.501f,
15.678f,
15.856f,
16.068f,
16.422f,
16.351f,
16.826f,
17.005f,
17.206f,
17.57f,
17.893f,
18.236f,
18.629f,
18.82f,
19.013f,
19.201f,
19.398f,
19.728f,
19.911f,
20.113f,
20.296f,
20.5f,
20.865f,
21.063f,
21.437f,
21.636f,
21.973f,
22.336f,
22.7f,
23.122f,
23.488f,
23.833f,
24.244f,
24.43f,
24.637f,
24.998f,
25.343f,
25.723f,
26.101f,
26.468f,
26.65f,
26.853f,
27.213f,
27.575f,
27.767f,
27.977f,
28.195f,
28.396f,
28.728f,
28.928f,
29.123f,
29.31f,
29.503f,
29.853f,
30.063f,
30.268f,
30.446f,
30.645f,
31.004f,
31.386f,
31.741f,
32.105f,
32.301f,
32.486f,
32.676f,
32.86f,
33.191f,
33.386f,
33.581f,
33.778f,
33.981f,
34.345f,
34.545f,
34.745f,
34.931f,
35.138f,
35.476f,
35.845f,
36.221f,
37.054f,
37.471f,
38.215f,
38.568f,
39.056f,
39.261f,
39.596f,
39.791f,
41.136f,
41.478f,
41.843f,
42.189f,
42.557f,
42.925f,
43.318f,
43.682f,
44.098f,
44.457f,
44.826f,
45.232f,
46.001f,
46.329f,
47.077f,
47.472f,
47.866f,
48.043f,
48.234f,
48.433f,
48.63f,
48.944f,
49.324f,
49.669f,
50.086f,
50.474f,
50.839f,
51.228f,
51.606f,
51.976f,
52.335f,
52.706f,
53.059f,
54.24f,
54.618f,
54.804f,
55.011f,
55.183f,
55.381f,
55.726f,
55.926f,
56.093f,
56.292f,
56.487f,
56.858f,
57.056f,
57.248f,
57.431f,
57.623f,
57.983f,
58.361f,
58.729f,
59.334f,
59.498f,
59.844f,
60.419f,
60.599f,
60.943f,
61.36f,
61.561f,
61.743f,
61.93f,
62.122f,
62.501f,
62.862f,
63.244f,
63.669f,
63.849f,
64.035f,
64.21f,
65.133f,
65.487f,
65.874f,
66.23f,
66.6f,
66.982f,
67.352f,
67.763f,
68.142f,
68.319f,
68.519f,
68.692f,
68.884f,
69.228f,
69.42f,
69.619f,
69.815f,
70.015f,
70.347f,
70.545f,
70.765f,
70.943f,
71.132f,
71.47f,
71.863f,
72.262f,
72.962f,
74.453f,
75.6f,
76.692f,
77.832f,
78.955f,
79.369f,
79.71f,
80.091f,
81.251f,
81.625f,
81.831f,
82.01f,
82.364f,
82.762f,
83.12f,
83.511f,
83.886f,
84.066f,
84.285f,
84.624f,
85.022f,
85.394f,
85.752f,
86.161f,
86.371f,
86.567f,
86.917f,
87.288f,
87.627f,
87.997f,
88.384f,
88.554f,
88.763f,
88.967f,
89.151f,
90.866f,
90.263f,
90.639f,
90.824f,
91.016f,
91.201f,
91.423f,
91.759f,
91.954f,
92.139f,
92.319f,
92.5f,
92.886f,
93.076f,
93.271f,
93.448f,
93.63f,
94.012f,
94.366f,
94.741f,
95.125f,
95.306f,
95.509f,
95.699f,
95.894f,
96.251f,
96.451f,
96.639f,
96.814f,
97.007f,
97.377f,
97.579f,
97.801f,
97.959f,
98.149f,
98.529f,
98.891f,
99.247f,
99.619f,
99.986f,
100.368f,
100.755f,
101.124f,
101.506f,
101.909f,
102.286f,
102.651f,
103.018f,
103.393f,
103.766f,
104.146f,
104.335f,
104.526f,
104.683f,
104.872f,
105.231f,
105.419f,
105.62f,
105.804f,
105.995f,
106.354f,
106.531f,
106.737f,
106.922f,
107.119f,
107.487f,
107.844f,
108.233f,
108.591f,
108.804f,
108.997f,
109.183f,
109.367f,
109.721f,
109.902f,
110.096f,
110.291f,
110.499f,
110.862f,
111.051f,
111.241f,
111.452f,
111.656f,
112.012f,
112.382f,
112.731f,
113.136f,
113.314f,
113.512f,
113.886f,
114.25f,
114.624f,
114.971f,
115.576f,
115.789f,
116.144f,

    };
    // Use this for initialization
    void Start()
    {
        Chain = true;
    }

    // Update is called once per frame
    void Update()
    {
        //timerに時間を加算させ続ける
        timer += Time.deltaTime;
        if (timer >= 5 && (Chain))
        {
            GetComponent<AudioSource>().Play();
            Chain = false;
        }
        if (GameData.DifficultyChange == 1)
        {
            //EasyのNotesを呼び出す
            for (timeCount = 0; timeCount < ReaperNormal.Length - 1; timeCount++)
            {

                if (ReaperNormal[timeCount] >= timer - Time.deltaTime / 2 && ReaperNormal[timeCount] <= timer + Time.deltaTime / 2)
                {

                    GameObject go = Instantiate(notesPrefab);
                }

            }
        }
        if (timer > 118)
        {
            clear.GetComponent<RectTransform>().anchoredPosition = new Vector2(0, 170);
        }
        if (timer >= 120)
        {
            SceneManager.LoadScene("ClearScene");
        }
    }
}
