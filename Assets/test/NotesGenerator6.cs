using UnityEngine;
using System.Collections;
using UnityEngine.SceneManagement;

public class NotesGenerator6 : MonoBehaviour {
    float timer = 0.0f;

    int timeCount = 0;

    bool Chain;

    NotesGenerator difficulty;
    public SceneChange sceneChange;
    public GameObject notesPrefab;

    int Timer;
    public float[] ReaperNormal =
    {
4.713f,
5.037f,
5.212f,
5.436f,
5.735f,
6.131f,
6.461f,
6.821f,
7.285f,
7.448f,
7.643f,
8.017f,
8.355f,
8.726f,
9.138f,
9.505f,
9.683f,
9.875f,
10.238f,
10.636f,
11.025f,
11.208f,
11.43f,
11.792f,
11.793f,
12.162f,
12.331f,
12.518f,
12.881f,
13.265f,
13.623f,
13.984f,
14.186f,
14.378f,
14.58f,
14.818f,
15.188f,
15.401f,
15.578f,
15.756f,
15.968f,
16.322f,
16.251f,
16.726f,
16.905f,
17.106f,
17.47f,
17.793f,
18.136f,
18.529f,
18.72f,
18.913f,
19.101f,
19.298f,
19.628f,
19.811f,
20.013f,
20.196f,
20.4f,
20.765f,
20.963f,
21.337f,
21.536f,
21.873f,
22.236f,
22.6f,
23.022f,
23.388f,
23.733f,
24.144f,
24.33f,
24.537f,
24.898f,
25.243f,
25.623f,
26.001f,
26.368f,
26.55f,
26.753f,
27.113f,
27.475f,
27.667f,
27.877f,
28.095f,
28.296f,
28.628f,
28.828f,
29.023f,
29.21f,
29.403f,
29.753f,
29.963f,
30.168f,
30.346f,
30.545f,
30.904f,
31.286f,
31.641f,
32.005f,
32.201f,
32.386f,
32.576f,
32.76f,
33.091f,
33.286f,
33.481f,
33.678f,
33.881f,
34.245f,
34.445f,
34.645f,
34.831f,
35.038f,
35.376f,
35.745f,
36.121f,
36.954f,
37.371f,
38.115f,
38.468f,
38.956f,
39.161f,
39.496f,
39.691f,
41.036f,
41.378f,
41.743f,
42.089f,
42.457f,
42.825f,
43.218f,
43.582f,
43.998f,
44.357f,
44.726f,
45.132f,
45.901f,
46.229f,
46.977f,
47.372f,
47.766f,
47.943f,
48.134f,
48.333f,
48.53f,
48.844f,
49.224f,
49.569f,
49.986f,
50.374f,
50.739f,
51.128f,
51.506f,
51.876f,
52.235f,
52.606f,
52.959f,
54.14f,
54.518f,
54.704f,
54.911f,
55.083f,
55.281f,
55.626f,
55.826f,
55.993f,
56.192f,
56.387f,
56.758f,
56.956f,
57.148f,
57.331f,
57.523f,
57.883f,
58.261f,
58.629f,
59.234f,
59.398f,
59.744f,
60.319f,
60.499f,
60.843f,
61.26f,
61.461f,
61.643f,
61.83f,
62.022f,
62.401f,
62.762f,
63.144f,
63.569f,
63.749f,
63.935f,
64.11f,
65.033f,
65.387f,
65.774f,
66.13f,
66.5f,
66.882f,
67.252f,
67.663f,
68.042f,
68.219f,
68.419f,
68.592f,
68.784f,
69.128f,
69.32f,
69.519f,
69.715f,
69.915f,
70.247f,
70.445f,
70.665f,
70.843f,
71.032f,
71.37f,
71.763f,
72.162f,
72.862f,
74.353f,
75.5f,
76.592f,
77.732f,
78.855f,
79.269f,
79.61f,
79.991f,
81.151f,
81.525f,
81.731f,
81.91f,
82.264f,
82.662f,
83.02f,
83.411f,
83.786f,
83.966f,
84.185f,
84.524f,
84.922f,
85.294f,
85.652f,
86.061f,
86.271f,
86.467f,
86.817f,
87.188f,
87.527f,
87.897f,
88.284f,
88.454f,
88.663f,
88.867f,
89.051f,
90.766f,
90.163f,
90.539f,
90.724f,
90.916f,
91.101f,
91.323f,
91.659f,
91.854f,
92.039f,
92.219f,
92.4f,
92.786f,
92.976f,
93.171f,
93.348f,
93.53f,
93.912f,
94.266f,
94.641f,
95.025f,
95.206f,
95.409f,
95.599f,
95.794f,
96.151f,
96.351f,
96.539f,
96.714f,
96.907f,
97.277f,
97.479f,
97.701f,
97.859f,
98.049f,
98.429f,
98.791f,
99.147f,
99.519f,
99.886f,
100.268f,
100.655f,
101.024f,
101.406f,
101.809f,
102.186f,
102.551f,
102.918f,
103.293f,
103.666f,
104.046f,
104.235f,
104.426f,
104.583f,
104.772f,
105.131f,
105.319f,
105.52f,
105.704f,
105.895f,
106.254f,
106.431f,
106.637f,
106.822f,
107.019f,
107.387f,
107.744f,
108.133f,
108.491f,
108.704f,
108.897f,
109.083f,
109.267f,
109.621f,
109.802f,
109.996f,
110.191f,
110.399f,
110.762f,
110.951f,
111.141f,
111.352f,
111.556f,
111.912f,
112.282f,
112.631f,
113.036f,
113.214f,
113.412f,
113.786f,
114.15f,
114.524f,
114.871f,
115.476f,
115.689f,
116.044f,

    };
    // Use this for initialization
    void Start()
    {
        Chain = true;
    }

    // Update is called once per frame
    void Update()
    {
        //timerに時間を加算させ続ける
        timer += Time.deltaTime;
        if (timer >= 5 && (Chain))
        {
            GetComponent<AudioSource>().Play();
            Chain = false;
        }
        if (GameData.DifficultyChange == 1)
        {
            //EasyのNotesを呼び出す
            for (timeCount = 0; timeCount < ReaperNormal.Length - 1; timeCount++)
            {

                if (ReaperNormal[timeCount] >= timer - Time.deltaTime / 2 && ReaperNormal[timeCount] <= timer + Time.deltaTime / 2)
                {

                    GameObject go = Instantiate(notesPrefab);
                }

            }
        }
        if (timer >= 120)
        {
            SceneManager.LoadScene("ClearScene");
        }
    }
}
