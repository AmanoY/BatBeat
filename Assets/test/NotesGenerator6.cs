using UnityEngine;
using System.Collections;
using UnityEngine.SceneManagement;

public class NotesGenerator6 : MonoBehaviour {
    float timer = 0.0f;

    int timeCount = 0;

    bool Chain;

    NotesGenerator difficulty;
    public SceneChange sceneChange;
    public GameObject notesPrefab;
    public RectTransform clear;

    int Timer;
    public float[] ReaperNormal =
    {
//-0.187f,
//0.137f,
//0.312f,
//0.536f,
//0.835f,
//1.231f,
//1.561f,
//1.921f,
//2.385f,
//2.548f,
//2.743f,
//3.117f,
//3.455f,
//3.826f,
//4.238f,
4.605f,
4.783f,
4.975f,
5.338f,
5.736f,
6.125f,
6.308f,
6.53f,
6.892f,
6.893f,
7.262f,
7.431f,
7.618f,
7.981f,
8.365f,
8.723f,
9.084f,
9.286f,
9.478f,
9.68f,
9.918f,
10.288f,
10.501f,
10.678f,
10.856f,
11.068f,
11.422f,
11.351f,
11.826f,
12.005f,
12.206f,
12.57f,
12.893f,
13.236f,
13.629f,
13.82f,
14.013f,
14.201f,
14.398f,
14.728f,
14.911f,
15.113f,
15.296f,
15.5f,
15.865f,
16.063f,
16.437f,
16.636f,
16.973f,
17.336f,
17.7f,
18.122f,
18.488f,
18.833f,
19.244f,
19.43f,
19.637f,
19.998f,
20.343f,
20.723f,
21.101f,
21.468f,
21.65f,
21.853f,
22.213f,
22.575f,
22.767f,
22.977f,
23.195f,
23.396f,
23.728f,
23.928f,
24.123f,
24.31f,
24.503f,
24.853f,
25.063f,
25.268f,
25.446f,
25.645f,
26.004f,
26.386f,
26.741f,
27.105f,
27.301f,
27.486f,
27.676f,
27.86f,
28.191f,
28.386f,
28.581f,
28.778f,
28.981f,
29.345f,
29.545f,
29.745f,
29.931f,
30.138f,
30.476f,
30.845f,
31.221f,
32.054f,
32.471f,
33.215f,
33.568f,
34.056f,
34.261f,
34.596f,
34.791f,
36.136f,
36.478f,
36.843f,
37.189f,
37.557f,
37.925f,
38.318f,
38.682f,
39.098f,
39.457f,
39.826f,
40.232f,
41.001f,
41.329f,
42.077f,
42.472f,
42.866f,
43.043f,
43.234f,
43.433f,
43.63f,
43.944f,
44.324f,
44.669f,
45.086f,
45.474f,
45.839f,
46.228f,
46.606f,
46.976f,
47.335f,
47.706f,
48.059f,
49.24f,
49.618f,
49.804f,
50.011f,
50.183f,
50.381f,
50.726f,
50.926f,
51.093f,
51.292f,
51.487f,
51.858f,
52.056f,
52.248f,
52.431f,
52.623f,
52.983f,
53.361f,
53.729f,
54.334f,
54.498f,
54.844f,
55.419f,
55.599f,
55.943f,
56.36f,
56.561f,
56.743f,
56.93f,
57.122f,
57.501f,
57.862f,
58.244f,
58.669f,
58.849f,
59.035f,
59.21f,
60.133f,
60.487f,
60.874f,
61.23f,
61.6f,
61.982f,
62.352f,
62.763f,
63.142f,
63.319f,
63.519f,
63.692f,
63.884f,
64.228f,
64.42f,
64.619f,
64.815f,
65.015f,
65.347f,
65.545f,
65.765f,
65.943f,
66.132f,
66.47f,
66.863f,
67.262f,
67.962f,
69.453f,
70.6f,
71.692f,
72.832f,
73.955f,
74.369f,
74.71f,
75.091f,
76.251f,
76.625f,
76.831f,
77.01f,
77.364f,
77.762f,
78.12f,
78.511f,
78.886f,
79.066f,
79.285f,
79.624f,
80.022f,
80.394f,
80.752f,
81.161f,
81.371f,
81.567f,
81.917f,
82.288f,
82.627f,
82.997f,
83.384f,
83.554f,
83.763f,
83.967f,
84.151f,
85.866f,
85.263f,
85.639f,
85.824f,
86.016f,
86.201f,
86.423f,
86.759f,
86.954f,
87.139f,
87.319f,
87.5f,
87.886f,
88.076f,
88.271f,
88.448f,
88.63f,
89.012f,
89.366f,
89.741f,
90.125f,
90.306f,
90.509f,
90.699f,
90.894f,
91.251f,
91.451f,
91.639f,
91.814f,
92.007f,
92.377f,
92.579f,
92.801f,
92.959f,
93.149f,
93.529f,
93.891f,
94.247f,
94.619f,
94.986f,
95.368f,
95.755f,
96.124f,
96.506f,
96.909f,
97.286f,
97.651f,
98.018f,
98.393f,
98.766f,
99.146f,
99.335f,
99.526f,
99.683f,
99.872f,
100.231f,
100.419f,
100.62f,
100.804f,
100.995f,
101.354f,
101.531f,
101.737f,
101.922f,
102.119f,
102.487f,
102.844f,
103.233f,
103.591f,
103.804f,
103.997f,
104.183f,
104.367f,
104.721f,
104.902f,
105.096f,
105.291f,
105.499f,
105.862f,
106.051f,
106.241f,
106.452f,
106.656f,
107.012f,
107.382f,
107.731f,
108.136f,
108.314f,
108.512f,
108.886f,
109.25f,
109.624f,
109.971f,
110.576f,
110.789f,
111.144f,
    };
    // Use this for initialization
    void Start()
    {
        Chain = true;
    }

    // Update is called once per frame
    void Update()
    {
        if (GameManager.isPause == true)
        {
            //timerに時間を加算させ続ける
            timer += Time.deltaTime;
            //if (timer >= 5 && (Chain))
            //{
            //    GetComponent<AudioSource>().Play();
            //    Chain = false;
            // }
            if (GameData.DifficultyChange == 1)
            {
                //EasyのNotesを呼び出す
                for (timeCount = 0; timeCount < ReaperNormal.Length - 1; timeCount++)
                {

                    if (ReaperNormal[timeCount] >= timer - Time.deltaTime / 2 && ReaperNormal[timeCount] <= timer + Time.deltaTime / 2)
                    {

                        GameObject go = Instantiate(notesPrefab);
                    }

                }
            }
            if (timer > 118)
            {
                clear.GetComponent<RectTransform>().anchoredPosition = new Vector2(0, 170);
            }
            if (timer >= 120)
            {
                SceneManager.LoadScene("ClearScene");
            }
        }
    }
}
